class Car:
    def __init__(self, speed=0):
        self.speed = speed
        self.odometer = 0
        self.time = 0

    def accelerate(self):
        self.speed += 5

    def brake(self):
        self.speed -= 5

    def step(self):
        self.odometer += self.speed
        self.time += 1

    def average_speed(self):
        return self.odometer / self.time


if __name__ == '__main__':
    my_car = Car()
    print("I'm a car!")
    while True:
        action = input("What should I do? [A]ccelerate, [B]rake, show [O]dometer, or show average [S]peed?").upper()
        if action not in "ABOS" or len(action) != 1:
            print("I don't know how to do that")
            continue
        if action == 'A':
            my_car.accelerate()
            print("Accelerating...")
        elif action == 'B':
            my_car.brake()
            print("Braking...")
        elif action == 'O':
            print("The car has driven {} kilometers".format(my_car.odometer))
        elif action == 'S':
            print("The car's average speed was {} kph".format(my_car.average_speed()))
        my_car.step()

# client3.py part
def getDataPoint(quote):
    """ Produce all of the needed values to generate a datapoint """
    stock = quote['stock']
    bid_price = float(quote['top_bid']['price'])
    ask_price = float(quote['top_ask']['price'])
    price = (bid_price + ask_price) / 2
    return stock, bid_price, ask_price, price

def getRatio(price_a, price_b):
    """ Get the ratio of price_a and price_b """
    if price_b == 0:
        return
    return price_a / price_b

def main():
    """ Main function to get data and print ratio """
    quotes = [
        {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2024-07-24 13:30:00.123456', 'top_bid': {'price': 120.48, 'size': 109}, 'stock': 'ABC'},
        {'top_ask': {'price': 117.87, 'size': 4}, 'timestamp': '2024-07-24 13:30:00.456789', 'top_bid': {'price': 117.87, 'size': 81}, 'stock': 'DEF'}
    ]
    
    prices = {}
    for quote in quotes:
        stock, bid_price, ask_price, price = getDataPoint(quote)
        prices[stock] = price
        print("Quoted {} at (bid:{}, ask:{}, price:{})".format(stock, bid_price, ask_price, price))
    
    print("Ratio {}".format(getRatio(prices['ABC'], prices['DEF'])))

